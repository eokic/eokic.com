---
// PROPS
interface Props {
  cssClass?: string | string[]
  theme?: 'header' | 'header-arrow' | 'primary' | 'neutral' | 'a11y' // defaults to neutral
  label?: string
  href?: string
  fullHeight?: boolean
  presentational?: boolean
}
const { cssClass, theme, label, href, fullHeight, presentational } = Astro.props

// METHODS
import { markdownToHTML } from '@/utils'

// HELPERS
const shouldSmoothScroll = href && href.startsWith('#')
---

<a
  class:list={[
    'btn',
    `-${theme || 'neutral'}`,
    {
      '-full-height': fullHeight,
    },
    ...(typeof cssClass === 'string' ? [cssClass] : cssClass || []),
  ]}
  href={href}
  aria-hidden={presentational ? true : null}
  tabindex={presentational ? -1 : 0}
  data-smooth-scroll={shouldSmoothScroll}
>
  <div
    class="btn-inner relative z-2"
    set:html={label ? markdownToHTML(label) : null}
  >
    <slot />
  </div>
</a>

<style is:global>
  .btn {
    @apply relative inline-block overflow-hidden;
    @apply py-3 px-2 sm:px-3 lg:px-4;
    @apply body lh-body font-sans text-white bg-primary;
    @apply rounded-[99px] cursor-pointer;
    outline: var(--focus-sr-width) var(--focus-sr-style) transparent;
    outline-offset: var(--focus-sr-offset);

    @media not (prefers-reduced-motion) {
      @apply transition-all;
    }

    &::before,
    &::after {
      @apply absolute z-1 pointer-events-none;
      @apply left-1/2 -translate-x-1/2 w-1/2 h-2 rounded-full;
      @apply duration-300;
      @apply mix-blend-overlay blur;
      content: '';

      @media not (prefers-reduced-motion) {
        @apply transition-all;
      }
    }

    &::before {
      @apply -top-1;
    }

    &::after {
      @apply -bottom-1;
    }

    &.-full-height {
      @apply h-full flex items-center;
    }

    /* --------------------------------------------------------------------------
      HEADER BUTTONS
    -------------------------------------------------------------------------- */
    &.-header,
    &.-header-arrow {
      @apply h-full flex items-center;
      @apply text-primary-dark bg-transparent;
    }

    &.-header-arrow {
      @apply text-primary-light font-medium;
    }

    /* --------------------------------------------------------------------------
      NEUTRAL THEME
    -------------------------------------------------------------------------- */
    &.-neutral {
      @apply text-primary bg-transparent;
      @apply underline decoration-secondary underline-offset-4;

      /* Hover */
      &:not(:active):hover {
        @apply text-primary-dark bg-primary-bg decoration-transparent;
        /* outline-color: var(--color-primary-xlight); */

        /* Glow */
        &::before,
        &::after {
          @apply bg-white;
        }
      }
    }

    /* --------------------------------------------------------------------------
      PRIMARY THEME
    -------------------------------------------------------------------------- */
    &.-primary {
      @apply px-4 md:px-5;
      @apply font-semibold bg-primary;

      /* Glow */
      &::before,
      &::after {
        @apply bg-white;
      }

      /* Hover */
      &:not(:active):hover {
        @apply bg-primary-dark;
      }
    }

    /* --------------------------------------------------------------------------
      ACCESSIBILITY BUTTONS
    -------------------------------------------------------------------------- */
    &.-a11y {
      @apply sr-only focus:not-sr-only;
      @apply py-2 px-3 !important;
      @apply h4 lh-h4 font-semibold text-white bg-slate-900;
      @apply rounded-sm;
      outline: var(--focus-sr-width) var(--focus-sr-style) var(--focus-sr-color);

      &::focus {
        @apply inline-block;
      }
    }

    &:not(:active):hover {
      box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.1),
        0px 4px 8px 0px rgba(0, 0, 0, 0.1),
        0px 14px 14px 0px rgba(0, 0, 0, 0.09),
        0px 32px 19px 0px rgba(0, 0, 0, 0.05),
        0px 56px 23px 0px rgba(0, 0, 0, 0.01),
        0px 88px 25px 0px rgba(0, 0, 0, 0);

      @media not (prefers-reduced-motion) {
        @apply -translate-y-[2px];
      }
    }

    /* Focus */
    &:not(:active):focus-visible {
      outline: var(--focus-sr-width) var(--focus-sr-style) var(--focus-sr-color);
    }

    /* Pressed */
    &:active {
      outline-width: 1px;
      outline-offset: 0.1em;
    }
  }
</style>
